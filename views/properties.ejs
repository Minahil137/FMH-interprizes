
<!DOCTYPE html>
<html>
   <style>
       /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
#map {
  height: 100%;
  width:100%;
  
}

/* Optional: Makes the sample page fill the window. */
html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}

input[type="text"] {
  background-color: #fff;
  border: 0;
  border-radius: 2px;
  box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
  margin: 10px;
  padding: 0 0.5em;
  font: 400 18px Roboto, Arial, sans-serif;
  overflow: hidden;
  line-height: 40px;
  margin-right: 0;
  min-width: 25%;
}

input[type="button"] {
  background-color: #fff;
  border: 0;
  border-radius: 2px;
  box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
  margin: 10px;
  padding: 0 0.5em;
  font: 400 18px Roboto, Arial, sans-serif;
  overflow: hidden;
  height: 40px;
  cursor: pointer;
  margin-left: 5px;
}
input[type="button"]:hover {
  background: #ebebeb;
}
input[type="button"].button-primary {
  background-color: #1a73e8;
  color: white;
}
input[type="button"].button-primary:hover {
  background-color: #1765cc;
}
input[type="button"].button-secondary {
  background-color: white;
  color: #1a73e8;
}
input[type="button"].button-secondary:hover {
  background-color: #d2e3fc;
}

#response-container {
  background-color: #fff;
  border: 0;
  border-radius: 2px;
  box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
  margin: 10px;
  padding: 0 0.5em;
  font: 400 18px Roboto, Arial, sans-serif;
  overflow: hidden;
  overflow: auto;
  max-height: 50%;
  max-width: 90%;
  background-color: rgba(255, 255, 255, 0.95);
  font-size: small;
}

#instructions {
  background-color: #fff;
  border: 0;
  border-radius: 2px;
  box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
  margin: 10px;
  padding: 0 0.5em;
  font: 400 18px Roboto, Arial, sans-serif;
  overflow: hidden;
  padding: 1rem;
  font-size: medium;
}
</style>
  <head>
    <title>Geocoding Service</title>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <!-- jsFiddle will insert css and js -->
  </head>
  <body>

    <div id="map"></div>
 
    <% response.forEach(function(response){ %>
      <li><%- response.ExactLocation %></li>
      <li><%- response.CNIC %></li>
      <li><%- response.ContactNumer%></li>
      <li><%- response.Description %></li>
      <li><%- response.Prize %></li>
    <%});%>
 </ul>

    <script>res1 = []</script>
    <% response.forEach(function(response){ %>
      <%- response.latitude %>
      <script>
        var  i=0;
          lati='<%- response.latitude%>'
          log='<%- response.longitude%>'
          res1.push([{lati, log}]);
          // res_='<%- response.latitude %>'
          // console.log(res1);
          // cor.push(res_);

      //  console.log("Log: " + cor)
   
      </script>
    <%});%>
  
</div>
    <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
    <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBIScuh5bEdKup46Me9H6VpFJpL6vN8YEQ&callback=initMap&v=weekly&channel=2"
      async
    ></script>
    <script>
      // 
        let map;
let marker;

function initMap() {
  const bangalore = { lat: 12.97, lng: 77.59 };
  map = new google.maps.Map(document.getElementById("map"), {
    zoom: 4,
    center: bangalore,
  })
  function AddMarker(cordinate)
{ new google.maps.Marker({
    position: cordinate,
    map:map
  
  })
}

  res1.forEach(function (value, i) {
    bangalore.lat=parseFloat(value[0].lati)
    bangalore.lng=parseFloat(value[0].log)
    console.log(bangalore)
    AddMarker(bangalore)
    //bangalore.lat = value[0].lati;
    //bangalore.lng=value[0].
  // console.log(value[0].lat);
    //myLatLng.lati = value[0].log;
    // console.log(value[0].lati);
    //console.log(myLatLng);
   // AddMarker(myLatLng,map)
  
  });

//   res1.forEach(function (value, i) {
//     console.log('%d: %s', i, value);
// });
// console.log(cor)
          // console.log(res1);



}


myLat = { lat: 31.345678, lng: 73.34567 }





////myLatLng.lat=document.getElementById(lat)
//myLatLng.lng=document.getElementById(long)
//console.log(myLatLng)



// const myLatLng = { lat: 31.4504, lng: 73.1350 };
// 






     
      
    
    

     </script>     
             
  </body>
</html>